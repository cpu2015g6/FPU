テストベンチです。

テストベンチに多分役立つソフトウェアを作りました。
浮動小数点演算に対して、ランダムにオペランドを生成し、結果として許される下限と上限を出力します。(配布資料参照)
実行時引数として、演算と生成するテストケースの数を指定して下さい。
演算は、add,mul,div,sqrt,sin,cos,atanをサポートしています。
sin,cosの実装基準にはパラメータに依存しますが、ここではc=1としています。

実行例

git clone https://github.com/cpu2015g6/FPU/tree/master/testbench
cd testbench/
make
./array mul 2
mul operate
generate 2 cases
"00000111011100111111110001000010", //1.835542005237435e-34・・・第1オペランド
"01111001011111000100001000111001", //8.1862622711867555e+34・・・第2オペランド
"01000001011100000110101101100110", //15.026220321655273・・・下限
"01000001011100000110101101110110", //15.026235580444336・・・上限
"11000001000100000011000001001000", //-9.011787414550781
"10111000000001001110011011011110", //-0.000031686264264862984
"00111001100101011011010111010110", //0.00028554972959682345
"00111001100101011011010111100000", //0.000285550020635128

./array sqrt 2
sqrt operate
generate 2 cases
"01000110110111101010110100101101", //28502.587890625・・・第1オペランド
"01000011001010001101001101101000", //168.8258056640625・・・下限
"01000011001010001101010000010000", //168.828369140625・・・上限
"00001100001010111011111101000100", //1.3230917725002356e-31
"00100101110100011010111010100000", //3.6374051150646694e-16
"00100101110100011010111101110010", //3.637460701601833e-16

